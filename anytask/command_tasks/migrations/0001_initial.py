# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2023-02-24 17:32
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0010_auto_20230224_2032'),
        ('issues', '0007_auto_20210228_1721'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('groups', '0003_auto_20210228_1721'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommandTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, db_index=True, max_length=191, null=True)),
                ('short_title', models.CharField(blank=True, db_index=True, max_length=15, null=True)),
                ('weight', models.IntegerField(db_index=True, default=0)),
                ('is_hidden', models.BooleanField(db_index=True, default=False)),
                ('task_text', models.TextField(blank=True, default=None, null=True)),
                ('score_max', models.IntegerField(db_index=True, default=0)),
                ('max_students', models.IntegerField(default=0)),
                ('max_commands', models.IntegerField(default=0)),
                ('contest_integrated', models.BooleanField(default=False)),
                ('rb_integrated', models.BooleanField(default=False)),
                ('type', models.CharField(choices=[(b'All', 's_obsuzhdeniem'), (b'Only mark', 'tolko_ocenka'), (b'Material', 'material'), (b'Seminar', 'seminar'), (b'Jupyter Notebook', 'jupyter notebook')], default=b'Only mark', max_length=128)),
                ('added_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('deadline_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('contest_id', models.IntegerField(db_index=True, default=0)),
                ('problem_id', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
                ('send_to_users', models.BooleanField(default=False)),
                ('sended_notify', models.BooleanField(db_index=True, default=True)),
                ('one_file_upload', models.BooleanField(default=False)),
                ('accepted_after_contest_ok', models.BooleanField(default=False)),
                ('score_after_deadline', models.BooleanField(default=True)),
                ('nb_assignment_name', models.CharField(blank=True, max_length=255, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='command_task_course', to='courses.Course')),
                ('group', models.ForeignKey(blank=True, db_index=False, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='command_task_group', to='groups.Group')),
                ('groups', models.ManyToManyField(related_name='command_task_groups_set', to='groups.Group')),
                ('parent_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='command_task_children', to='command_tasks.CommandTask')),
                ('updated_by', models.ForeignKey(blank=True, db_index=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='command_task_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommandTaskGroupRelations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField(default=0)),
                ('deleted', models.BooleanField(default=False)),
                ('group', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, related_name='command_relation_group', to='groups.Group')),
                ('task', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, related_name='command_relation_task', to='command_tasks.CommandTask')),
            ],
        ),
        migrations.CreateModel(
            name='CommandTaskLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, db_index=True, max_length=191, null=True)),
                ('weight', models.IntegerField(default=0)),
                ('task_text', models.TextField(blank=True, default=None, null=True)),
                ('score_max', models.IntegerField(default=0)),
                ('contest_integrated', models.BooleanField(default=False)),
                ('rb_integrated', models.BooleanField(default=False)),
                ('type', models.CharField(choices=[(b'All', 's_obsuzhdeniem'), (b'Only mark', 'tolko_ocenka')], default=b'All', max_length=128)),
                ('added_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('deadline_time', models.DateTimeField(default=None, null=True)),
                ('contest_id', models.IntegerField(db_index=True, default=0)),
                ('problem_id', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
                ('course', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, related_name='command_log_course', to='courses.Course')),
                ('group', models.ForeignKey(blank=True, db_index=False, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='command_log_group', to='groups.Group')),
                ('groups', models.ManyToManyField(related_name='command_groups_log_set', to='groups.Group')),
                ('parent_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='command_log_parent_task_set', to='command_tasks.CommandTaskLog')),
                ('updated_by', models.ForeignKey(blank=True, db_index=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='command_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommandTaskTaken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_user_score', models.IntegerField(db_index=True, default=0)),
                ('second_user_score', models.IntegerField(db_index=True, default=0)),
                ('third_user_score', models.IntegerField(db_index=True, default=0)),
                ('third_user_enabled', models.BooleanField(default=False)),
                ('status', models.IntegerField(choices=[(0, 'Task taken'), (1, 'Task cancelled'), (2, 'Task blacklisted'), (3, 'Task scored'), (4, 'TaskTaken deleted')], db_index=True, default=0)),
                ('status_check', models.CharField(choices=[(b'EDIT', '\u0414\u043e\u0440\u0435\u0448\u0438\u0432\u0430\u043d\u0438\u0435'), (b'QUEUE', '\u041e\u0436\u0438\u0434\u0430\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438'), (b'OK', '\u0417\u0430\u0434\u0430\u0447\u0430 \u0437\u0430\u0447\u0442\u0435\u043d\u0430 \u0438/\u0438\u043b\u0438 \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442\u0441\u044f')], db_index=True, default=b'EDIT', max_length=5)),
                ('taken_time', models.DateTimeField(blank=True, null=True)),
                ('blacklisted_till', models.DateTimeField(blank=True, null=True)),
                ('added_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('first_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='first_user', to=settings.AUTH_USER_MODEL)),
                ('issue', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='command_issue', to='issues.Issue')),
                ('second_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='second_user', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, related_name='command_task', to='command_tasks.CommandTask')),
                ('third_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='third_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='commandtasktaken',
            unique_together=set([('first_user', 'second_user', 'third_user', 'task')]),
        ),
        migrations.AlterUniqueTogether(
            name='commandtaskgrouprelations',
            unique_together=set([('task', 'group')]),
        ),
    ]
